p40.位与字节：
（1）C++中，位与字节的关系不是确定的，需要根据系统来定。
但是，short类型不小于16位， -32768~32767
int不小于short，long不小于32位，longlong至少64位。
float 类型通常为32位，double为64位。
通常1byte＝8bit, int为4byte.
（2）使用sizeof()来得到类型的长度，以字节为单位。
(3)溢出： 无符号类型益出为从0重新开始；有符号类型溢出为从最小值重新开始。
————————————————————————————
p59 运算符
（1）％ 为取余运算，x％y ，两个操作数需要均为整数。
(2) 使用｛｝去初始化变量时，不允许缩窄： 例如  int x=66; char y{x} 是不被允许的。
——————————————————————————————
p76
(1)字符串数组：
char string[]=“nihao”;  //初始化时，可不写数组的元素数。
char string[100]=“nihao”; //空余元素用 \0填充。 
sizeof() 计算的改数组的所有元素数，包含\0 。
strlen()计算有值的元素数，不包含\0。
可使用 string[1]=‘\0’来截断此字符串数组。
——————————————————————————
p80
字符串数组的输入：
(1)cin 识别到字符串的空格、换行停止；输入确定的回车键将留在输入序列中。
（2）cin.getline（arr，长度） ：识别到字符串的回车键为止，且不保留回车键。
（3）cin.get(arr,长度):识别到字符串回车键为止，且在输入缓存中保留回车，下一次输入识别的第一个字符将为回车。

________________
p86
string类型：
（1）string类型需要引入头文件 #include <string>;
(2)string 类型的元素可以直接赋值给另一个string类型，也可以相加；
（3）输入：可使用cin>>string   //空格被视为完成。
   getline(cin,string) //效果等同于 cin.getline();

——————————————————————————————————
p90
结构 struct:
(1)定义： struct sth={string name; int age; float score;};  
(2)实例化：  sth zwj={“zwj”,20,100.0};
(3)调用：  zwj.name /zwj.age/zwj.score
(4)结构数组：  sth arr[10]={{“zwj”,20,100},{“zzz”,20,12}};   使用arr[0].name来调用